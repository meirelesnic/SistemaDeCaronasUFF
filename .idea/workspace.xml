<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SCOPE_TYPE" value="3" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="465da5e0-25e1-4c82-bf08-4ac35aa62b0a" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/uff_caronas/test/model/Services/route_service_test.dart" beforeDir="false" afterPath="$PROJECT_DIR$/uff_caronas/test/model/Services/route_service_test.dart" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dart File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2fhYij9OoJI4nGhfwcZSZOQmqI5" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "dart.analysis.tool.window.visible": "false",
    "git-widget-placeholder": "pedro__unit__test",
    "ignore.virus.scanning.warn.message": "true",
    "io.flutter.reload.alreadyRun": "true",
    "last_opened_file_path": "C:/tools/dart-sdk",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "flutter.settings",
    "show.migrate.to.gradle.popup": "false"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Administrator\Documents\GitHub\SistemaDeCaronasUFF\uff_caronas\lib\view" />
      <recent name="C:\Users\Administrator\Documents\GitHub\SistemaDeCaronasUFF\uff_caronas\lib\model" />
      <recent name="C:\Users\Administrator\Documents\GitHub\SistemaDeCaronasUFF\uff_caronas\image" />
      <recent name="C:\Users\Administrator\Documents\GitHub\SistemaDeCaronasUFF\uff_caronas\lib\telas" />
      <recent name="C:\Users\Administrator\Documents\GitHub\SistemaDeCaronasUFF\uff_caronas\android\app" />
    </key>
  </component>
  <component name="RunManager" selected="Flutter Test.tests in route_service_test.dart">
    <configuration name="Deve obter a rota de caminhada e distância" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="Deve obter a rota de caminhada e distância" />
      <option name="testFile" value="$PROJECT_DIR$/uff_caronas/test/model/Services/route_service_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Deve salvar uma carona corretamente" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="Deve salvar uma carona corretamente" />
      <option name="testFile" value="$PROJECT_DIR$/uff_caronas/test/model/DAO/carona_dao_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Deve verificar se um ponto está perto de outro ponto" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="Deve verificar se um ponto está perto de outro ponto" />
      <option name="testFile" value="$PROJECT_DIR$/uff_caronas/test/model/Services/route_service_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in carona_dao_test.dart" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testFile" value="$PROJECT_DIR$/uff_caronas/test/model/DAO/carona_dao_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in route_service_test.dart" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testFile" value="$PROJECT_DIR$/uff_caronas/test/model/Services/route_service_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Flutter Test.tests in route_service_test.dart" />
        <item itemvalue="Flutter Test.Deve verificar se um ponto está perto de outro ponto" />
        <item itemvalue="Flutter Test.Deve obter a rota de caminhada e distância" />
        <item itemvalue="Flutter Test.tests in carona_dao_test.dart" />
        <item itemvalue="Flutter Test.Deve salvar uma carona corretamente" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="465da5e0-25e1-4c82-bf08-4ac35aa62b0a" name="Changes" comment="" />
      <created>1714254907621</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714254907621</updated>
    </task>
    <servers />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="../../../../Documents/GitHub/SistemaDeCaronasUFF/uff_caronas/coverage/lcov.info" NAME="tests in usuario_dao_test.dart Coverage Results" MODIFIED="1717969788508" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="FlutterCoverageRunner" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>